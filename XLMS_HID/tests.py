from __future__ import absolute_import

from .XLMS_HID import Report, Admin, hex_parser, serialize, deserialize, Magic_Numbers

__author__ = "riggs"

__exports__ = ("passed",)


admin = Admin(Admin.Version(1, 0, 0))

admin_hex = "0x00, 0x0D, 0x01, 0x04, 0x05, 0x61, 0x64, 0x6D, 0x69, 0x6E, 0x01, 0x00, 0x00"

timestamp = Report(ID=1, types=Report.Types(output=True), name=u'timestamp',
                   serialization=[Report.Serialization(type='Uint', length=64)])
timestamp_hex = "0x00, 0x0F, 0x01, 0x02, 0x09, 0x74, 0x69, 0x6D, 0x65, 0x73, 0x74, 0x61, 0x6D, 0x70, 0x21"


cases = {
    admin_hex: admin,
    timestamp_hex: timestamp,
}

for hex, obj in cases.items():
    assert hex_parser(serialize([obj])) == hex
    assert hex_parser(serialize(deserialize(hex))) == hex

assert Magic_Numbers(admin, timestamp) == ", ".join([admin_hex, timestamp_hex])


timeout = Report(ID=5, types=Report.Types(feature=True), name=u'timeout',
                 serialization=[Report.Serialization(type='Uint', length=32)])

events = Report(ID=6, types=Report.Types(input=True, output=True), name=u'events',
                serialization=[Report.Serialization(type='Uint', length=64),
                               Report.Serialization(type='Int', length=8)])

errors = Report(ID=7, types=Report.Types(input=True), name=u'errors',
                serialization=[Report.Serialization(type='Uint', length=64),
                               Report.Serialization(type='Int', length=8)])

"""
assert hex_parser(serialize([admin, timestamp, timeout, events, errors])) == \
       "0x0E 0x01 0x04 0x05 0x61 0x64 0x6D 0x69 0x6E 0x05 0x05 0x05 0x05 0x14 " \
       "0x0E 0x04 0x0C 0x09 0x74 0x69 0x6D 0x65 0x73 0x74 0x61 0x6D 0x70 0x21 " \
       "0x0C 0x05 0x0C 0x07 0x74 0x69 0x6D 0x65 0x6F 0x75 0x74 0x11 " \
       "0x0C 0x06 0x03 0x06 0x65 0x76 0x65 0x6E 0x74 0x73 0x21 0x06 " \
       "0x0C 0x07 0x01 0x06 0x65 0x72 0x72 0x6F 0x72 0x73 0x21 0x06"
"""

"""
0x0E 0x01 0x04 0x05 0x61 0x64 0x6D 0x69 0x6E 0x05 0x05 0x05 0x05 0x14
0x0E 0x04 0x0C 0x09 0x74 0x69 0x6D 0x65 0x73 0x74 0x61 0x6D 0x70 0x21
0x0C 0x05 0x0C 0x07 0x74 0x69 0x6D 0x65 0x6F 0x75 0x74 0x11
0x0C 0x06 0x03 0x06 0x65 0x76 0x65 0x6E 0x74 0x73 0x21 0x06
0x0C 0x07 0x01 0x06 0x65 0x72 0x72 0x6F 0x72 0x73 0x21 0x06
"""

passed = True
